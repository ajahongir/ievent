<div id='wrap'>

  <div id='external-events'>
    <h4>Most Events</h4>
    (<h7>drag & drop</h7>)
    <div class="external-event once">Meeting</div>
    <div class="external-event daily">Meeting</div>
    <div class="external-event weekly">Meeting</div>
    <div class="external-event daily">Out of office</div>
    <div class="external-event weekly">Out of office</div>
    <div class="external-event yearly">Vocation</div>
    <div class="external-event yearly">Birthday</div>
    <div><%= link_to "My events", list_events_path %></div>
    <div class="">

    </div>
</div>


  <div id='calendar'></div>

  <div id="eventDialog" class="dialog ui-helper-hidden">

		<table>
			<tr>
				<td align="left" style="padding: 5px 0px" ><%= label_tag "Title: " %></td>
				<td align="left" style="padding: 5px 0px"><%= text_field_tag :title %></td>
			</tr>
			<tr>
				<td align="left" style="padding: 5px 0px"><%= label_tag "Repeat: " %></td>
				<td align="left" style="padding: 5px 0px"><%= select_tag(:repeat, options_for_select(Event.notify_types.map { |type| [type, type] }, Event.notify_types.first )) %></td>
			</tr>
		</table>

	</div>

	<div style="clear: both"></div>

</div>

<script type='text/javascript'>

	var event_title = $("#title");
	var event_repeat = $("#repeat");

	$(document).ready(function() {

		var dialog = $("#eventDialog");
		$(function() {
			dialog.dialog({
				modal: true,
				autoOpen: false,
				width: 400,
				title: "Event",
				close: function(event, ui) {
					event_title.val("");
					event_repeat.val("");
					calendar.fullCalendar( 'rerenderEvents' );
					$(this).dialog( "option" , "event" , null );
					$(this).dialog( "option", "mode", null )
				},
				open: function(event, ui) {
					if($(this).dialog( "option", "mode" )=="new") {
						$(":button:contains('Delete')").attr("disabled","disabled").addClass("ui-state-disabled");
						event_title.val("");
						event_repeat.val("");
					} else {
						$(":button:contains('Delete')").removeAttr("disabled").removeClass("ui-state-disabled");
						event = $(this).dialog( "option", "event" );
						event_title.val(event.title);
						event_repeat.val(event.repeat);
					}
				},
				buttons: [{
        	text: "Save",
        	click: function() {
        		event = $(this).dialog( "option" , "event" );
        		event.title = event_title.val();
						event.repeat = event_repeat.val();
						if (event.title) {
							if($(this).dialog( "option", "mode" )=="new") {
								insertEvent(event, function(response){
									calendar.fullCalendar('renderEvent', $.extend(event, { id: response.id, className: event.repeat.toLowerCase() }), true );
									dialog.dialog("close");
								});
							} else {
								update( $.extend(event, { className: event.repeat.toLowerCase() }) , function() {
									dialog.dialog("close");
								})
							}
						}
      		}
    		}, {
        	text: "Delete",
        	click: function() {
        		event = $(this).dialog( "option" , "event" );
        		if(event) {
		      		remove(event, function() {
		      			calendar.fullCalendar( 'removeEvents', event.id )
		      			dialog.dialog("close");
		      		})
        		}
      		}
    		}, {
        	text: "Cancel",
        	click: function() { $(this).dialog("close"); }
    		}]
			});
		});


		/* initialize the external events
		-----------------------------------------------------------------*/

		$('#external-events div.external-event').each(function() {

			// create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
			// it doesn't need to have a start or end
			var eventObject = {
				title: $.trim($(this).text()) // use the element's text as the event title
			};

			// store the Event Object in the DOM element so we can get to it later
			$(this).data('eventObject', eventObject);

			// make the event draggable using jQuery UI
			$(this).draggable({
				zIndex: 999,
				revert: true,      // will cause the event to go back to its
				revertDuration: 0  //  original position after the drag
			});

		});


		/* initialize the calendar
		-----------------------------------------------------------------*/

		var calendar = $('#calendar').fullCalendar({
			editable: true,
			selectable: true,
			selectHelper: true,
			droppable: true, // this allows things to be dropped onto the calendar !!!
			header: {

				left: 'prev,next today',
				center: 'title',
				right: 'month,agendaWeek,agendaDay'

			},

			eventClick: function(calEvent, jsEvent, view) {

        dialog.dialog( "option" , "event", calEvent);
				dialog.dialog('open');


    	},

			eventDrop: function(event, dayDelta, minuteDelta, allDay, revertFunc) {

				ext	= allDay ? {} : { allDay: allDay }
				msg = allDay ? "Event is now all-day" : "Event has a time-of-day"
        alert(msg);
        if (!confirm("Are you sure about this change?")) {
          	revertFunc();
        	} else {
        		update($.extend(event, ext))
        	}
      	calendar.fullCalendar('unselect');

			},

	    eventResize: function(event,dayDelta,minuteDelta,revertFunc) {

				if(!confirm("is this okay?")) {
            revertFunc();
        } else {
        	update($.extend(event, { allDay: event.allDay }))
        }

  		},

			select: function( startDate, endDate, allDay, jsEvent, view ) {

				dialog.dialog("option", "mode", "new");
				dialog.dialog("option", "event", { start: startDate, end: endDate, allDay: allDay });
				dialog.dialog("open")

			},

      eventRender: function(event, element) {

//        $(element).removeClass("once").removeClass("daily").removeClass("weekly").removeClass("monthly").removeClass("yearly").addClass(event.className)

      },

			drop: function(date, allDay) { // this function is called when something is dropped

				// retrieve the dropped element's stored Event Object
				var originalEventObject = $(this).data('eventObject');

				// we need to copy it, so that multiple events don't have a reference to the same object
				var copiedEventObject = $.extend({}, originalEventObject);

				// assign it the date that was reported
				copiedEventObject.start = date;
				copiedEventObject.allDay = allDay;
				if($(this).hasClass("once")){
				  copiedEventObject.repeat = "once";
				  copiedEventObject.className = "once";
				}
				if($(this).hasClass("daily")){
				  copiedEventObject.repeat = "daily";
				  copiedEventObject.className = "daily";
				}
				if($(this).hasClass("weekly")){
				  copiedEventObject.repeat = "weekly";
				  copiedEventObject.className = "weekly";
				}
				if($(this).hasClass("monthly")){
				  copiedEventObject.repeat = "monthly";
				  copiedEventObject.className = "monthly";
				}
				if($(this).hasClass("yearly")){
				  copiedEventObject.repeat = "yearly";
				  copiedEventObject.className = "yearly";
				}

        insertEvent(copiedEventObject, function(response){

          // render the event on the calendar
				  // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
				  $('#calendar').fullCalendar('renderEvent', $.extend(copiedEventObject, { id: response.id } ), true);

        });

			}

		});

		function insertEvent(eventObject, callback){
			data = { title: eventObject.title, repeat: eventObject.repeat, start: eventObject.start.toLocaleFormat("%Y-%m-%d-%H-%M") }
			if(eventObject.end){ data["end"] = eventObject.end.toLocaleFormat("%Y-%m-%d-%H-%M") }
			if(eventObject.allDay){ data["allDay"] = eventObject.allDay } else { data["allDay"] = false }
			$.ajax({ url: "<%= events_path %>",
			  type: 'POST',
				beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
				data: data,
				success: callback
			})
		}
		function load(){
			$.get("<%= events_path %>").success(function(response){
				$.each(response, function(index, item){
					calendar.fullCalendar('renderEvent', item, true);
				});
			});
		}
		load();

		function update(eventElement, callback){
		  data = { "_method": "put", title: eventElement.title, repeat: eventElement.repeat, start: eventElement.start.toLocaleFormat("%Y-%m-%d-%H-%M") }
			if(eventElement.end) { data["end"] = eventElement.end.toLocaleFormat("%Y-%m-%d-%H-%M") }
			if(eventElement.allDay) { data["allDay"] = eventElement.allDay } else { data["allDay"] = false }
			$.ajax({ url: "<%= events_path %>/" + eventElement.id,
			  type: 'POST',
				beforeSend: function(xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
				data: data,
				success: callback
			})
		}
		function remove(eventElement, callback) {
			$.ajax({ url: "<%= events_path %>/" + eventElement.id,
			  type: 'POST',
				beforeSend: function(xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
				data: { "_method": "delete" },
				success: callback
			})
		}
	});

</script>

